> Problem: [236. 二叉树的最近公共祖先](https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/description/)

[TOC]

# 题目

> 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。

# 思路

> 1.root  null  ---> null  
> 2.root ---> p | q, 最近公共祖先是root
> 否则 在p|q的左子树中分别递归查找
> 3.p&q 在root的左、右子树，则最近共祖先也在左、右子树中递归
> 4.p和q分别在左右子树，则root是最近公共祖先

# 复杂度

- 时间复杂度:

> $O(n)$

- 空间复杂度:

> $O(n)$

# Code

* []

```JavaScript

/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @param {TreeNode} p
 * @param {TreeNode} q
 * @return {TreeNode}
 */
var lowestCommonAncestor = function (root, p, q) {
  if (!root) {
    return null;
  }
  if (root === p || root === q) {
    return root;
  }
  const left = lowestCommonAncestor(root.left, p, q);
  const right = lowestCommonAncestor(root.right, p, q);
  if (left && right) {
    return root;
  } else if (left) {
    return left;
  } else {
    return right;
  }
};
```

